<?xml version="1.0" encoding="UTF-8" ?>

<Section xmlns="urn:com.io7m.structural:7:0"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         title="Command-Line Interface"
         tableOfContentsDepth="1">

  <Section title="Overview">
    <Subsection title="Usage">
      <Paragraph>
        The <Term type="package">changelog</Term> package provides a command-line interface and API
        for creating, modifying, and formatting software changelogs. The base <Term type="command">changelog</Term>
        command is broken into a number of subcommands which are documented over the following sections.
      </Paragraph>
      <FormalItem title="Command-Line Overview">
        <Verbatim>
          <xi:include parse="text"
                      href="usage.txt"/>
        </Verbatim>
      </FormalItem>
    </Subsection>
    <Subsection title="Verbosity">
      <Paragraph>
        All subcommands accept a <Term type="parameter">--verbose</Term> parameter that may be set to one of
        <Term type="constant">trace</Term>, <Term type="constant">debug</Term>, <Term type="constant">info</Term>,
        <Term type="constant">warn</Term>, or <Term type="constant">error</Term>. This parameter sets the lower bound for
        the severity of messages that will be logged. For example, at <Term type="constant">debug</Term> verbosity, only
        messages of severity <Term type="constant">debug</Term> and above will be logged. Setting the verbosity to
        <Term type="constant">trace</Term>
        level effectively causes everything to be logged, and will produce large volumes of debugging output.
      </Paragraph>
      <FormalItem title="Log Levels">
        <xi:include href="verbosity.xml"/>
      </FormalItem>
    </Subsection>
    <Subsection title="@ Syntax">
      <Paragraph>
        The <Term type="package">changelog</Term> command-line tool uses <LinkExternal target="https://jcommander.org/">
        jcommander
      </LinkExternal> to parse command-line arguments, and therefore supports placing command-line arguments into a file,
        one argument per line, and then referencing that file with <Term type="constant">@</Term>. For example:
      </Paragraph>
      <FormalItem title="@ Syntax">
        <Verbatim>
          <xi:include parse="text"
                      href="at-syntax.txt"/>
        </Verbatim>
      </FormalItem>
    </Subsection>
    <Subsection title="Exit Code">
      <Paragraph>
        All subcommands, unless otherwise specified, yield an exit code of <Term type="constant">0</Term> on success, and
        a non-zero exit code on failure.
      </Paragraph>
    </Subsection>
  </Section>

  <xi:include href="cmdline-change-add.xml" />
  <xi:include href="cmdline-help.xml" />
  <xi:include href="cmdline-initialize.xml" />
  <xi:include href="cmdline-release-begin.xml" />
  <xi:include href="cmdline-release-current.xml" />
  <xi:include href="cmdline-release-set-version.xml" />
  <xi:include href="cmdline-release-finish.xml" />
  <xi:include href="cmdline-version.xml" />
  <xi:include href="cmdline-write-atom.xml" />
  <xi:include href="cmdline-write-plain.xml" />
  <xi:include href="cmdline-write-xhtml.xml" />

</Section>
